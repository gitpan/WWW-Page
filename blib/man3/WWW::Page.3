.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::Page 3"
.TH WWW::Page 3 "2009-01-18" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Page \- XSLT\-based and XML\-configured website engine
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
mod_perl custom handler
.PP
.Vb 1
\& use WWW::Page;
\&
\& my $page = new WWW::Page({
\&     \*(Aqxslt\-root\*(Aq => "$ENV{DOCUMENT_ROOT}/../data/xsl",
\&     \*(Aqlib\-root\*(Aq  => "$ENV{DOCUMENT_ROOT}/../lib",
\&     \*(Aqtimeout\*(Aq   => 30,
\& });
\&
\& sub handler {
\&    my $r = shift;
\&
\&     $page\->run(
\&         source      => "$ENV{DOCUMENT_ROOT}/index.xml",
\&         request_uri => $ENV{REQUEST_URI}
\&     );
\&     print $page\->response();
\&
\&     return Apache2::Const::OK;
\& }
.Ve
.PP
XML-based page description
.PP
.Vb 5
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <page
\&     import="Import::Client"
\&     transform="view.xsl"
\&     xmlns:page="urn:www\-page">
\&
\&     <manifest>
\&         <title>My website</title>
\&         <locale>en\-gb</locale>
\&         <page:keyword\-list/>
\&     </manifest>
\&
\&     <content>
\&         <page:month\-calendar/>
\&     </content>
\& </page>
.Ve
.PP
Parts of imported controller script
.PP
.Vb 3
\& package Import::Client;
\& use utf8;
\& use XML::LibXML;
\&
\& sub keywordList
\& {
\&     my ($this, $page, $node, $args) = @_;
\&
\&     my $sth = $dbh\->prepare("select keyword, uri from keywords order by keyword");
\&     $sth\->execute();
\&     while (my ($keyword, $uri) = $sth\->fetchrow_array())
\&     {
\&         my $item = $page\->{\*(Aqxml\*(Aq}\->createElement (\*(Aqitem\*(Aq);
\&         $item\->appendText($keyword);
\&         $item\->setAttribute(\*(Aquri\*(Aq, $uri);
\&         $node\->appendChild($item);
\&     }
\&
\&     return $node;
\& }
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
WWW::Page makes website built on \s-1XSLT\s0 technology easy to start. It provides simple mechanism to describe
behaviour of pages in \s-1XML\s0 files, adds external logic and applies \s-1XSL\s0 transformations. Both \s-1XML\s0 and \s-1XSLT\s0 files
are being transparently caching.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a framework for organizing XSLT-based websites. It allows to put the process of
calling user subroutines and applying \s-1XSL\s0 transformations behind the scene. Wherever possible, \s-1XML\s0 and \s-1XSL\s0
documents are cached which eliminates the need of useles reloading and re-parsing them.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Directory \f(CW\*(C`example\*(C'\fR in the repository contains an example of sample website running under mod_perl and WWW::Page.
.Sh "Known limitations"
.IX Subsection "Known limitations"
\&\s-1GET\s0 and \s-1POST\s0 parser cannot accept uploaded files and Unicode-encoded strings.
.PP
Example does allow only one editor user; only latin symbols may be in keyword list.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrew Shitov, <andy@shitov.ru>
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
WWW::Page module is a free software.
You may resistribute and (or) modify it under the same terms as Perl.
