LOCK TABLES `keyword2message` WRITE;
/*!40000 ALTER TABLE `keyword2message` DISABLE KEYS */;
INSERT INTO `keyword2message` VALUES (4,1,46),(3,1,45),(2,1,44),(5,2,66),(2,2,65),(6,3,21),(2,3,20),(7,4,40),(2,4,39),(8,5,29),(2,5,28),(9,5,30),(10,6,38),(7,6,37),(8,6,36),(2,6,35),(11,4,41),(12,7,69),(8,7,68),(2,7,67);
/*!40000 ALTER TABLE `keyword2message` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `keywords` WRITE;
/*!40000 ALTER TABLE `keywords` DISABLE KEYS */;
INSERT INTO `keywords` VALUES (5,'module','module'),(2,'xml','xml'),(3,'api','api'),(4,'tutorial','tutorial'),(6,'writer','writer'),(7,'library','library'),(8,'xslt','xslt'),(9,'transform','transform'),(10,'libxslt','libxslt'),(11,'libxml','libxml'),(12,'web-site','web-site');
/*!40000 ALTER TABLE `keywords` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `message` WRITE;
/*!40000 ALTER TABLE `message` DISABLE KEYS */;
INSERT INTO `message` VALUES (1,'xml-api','XML::API','<p>XML::API is a class for creating XML documents using object method calls. This class is meant for generating XML programatically and not for reading or parsing it.</p>\r\n\r\n<p>A document author calls the desired methods (representing elements) to create an XML tree in memory which can then be rendered or saved as desired. The advantage of having the in-memory tree is that you can be very flexible about when different parts of the document are created and the final output is always nicely rendered.</p>','2007-10-30 18:43:00',1,1,1,'2007-12-30 18:53:47'),(2,'xml-all','XML::All','<p>This module provides a handy wrapper around XML::Twig and XML::Literal to provide easy accessors to the XML structures.</p>\r\n\r\n<p>This is a preview release; all APIs are subject to change, and stream processing mode is not yet in place.</p>\r\n\r\n<p>Please be patient and don\'t depend on this module for your production code just now. :)</p>','2007-11-30 18:47:00',1,1,1,'2007-12-30 18:56:43'),(3,'xml-autowriter','XML::AutoWriter','<p>Alpha. Use and patch, don\'t depend on things not changing drastically.</p>\r\n<p>Many methods supplied by XML::Writer are not yet supplied here.</p>\r\n<p>This module subclasses XML::ValidWriter and provides automatic start and end tag generation, allowing you to emit only the \'important\' tags.</p>\r\n<p>See XML::ValidWriter for the details on all functions not documented here.</p>','2007-12-30 18:49:00',1,1,1,'2007-12-30 18:49:33'),(4,'xml-libxml','XML::LibXML','<p>This module is an interface to the gnome libxml2 DOM and SAX parser and the DOM tree. It also provides an XML::XPath-like findnodes() interface, providing access to the XPath API in libxml2. The module is split into several packages which are not described in this section.</p>\r\n\r\n<p>For further information, please check the following documentation.</p>','2007-12-30 18:50:00',1,1,1,'2007-12-30 18:52:43'),(5,'xml-xslt','XML::XSLT','<p>This module implements the W3C\'s XSLT specification. The goal is full implementation of this spec, but we have not yet achieved that. However, it already works well. See \"XML::XSLT Commands\" for the current status of each command.</p>\r\n\r\n<p>XML::XSLT makes use of XML::DOM and LWP::Simple, while XML::DOM uses XML::Parser. Therefore XML::Parser, XML::DOM and LWP::Simple have to be installed properly for XML::XSLT to run.</p>','2007-12-30 18:51:00',1,1,1,'2007-12-30 18:51:31'),(6,'xml-libxslt','XML::LibXSLT','<p>This module is an interface to the gnome project\'s libxslt. This is an extremely good XSLT engine, highly compliant and also very fast. I have tests showing this to be more than twice as fast as Sablotron.</p>','2007-12-30 18:52:00',1,1,1,'2007-12-30 18:52:18'),(7,'www-page','WWW::Page','<p>WWW::Page module allows to think of a web-site as a paranoic who divides data from layout :-)</p>','2008-01-01 18:54:00',1,1,1,'2007-12-30 19:00:00');
/*!40000 ALTER TABLE `message` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `word` WRITE;
/*!40000 ALTER TABLE `word` DISABLE KEYS */;
INSERT INTO `word` VALUES (1,'tree',8),(330,'created',1),(329,'parsing',1),(4,'document',7),(328,'create',1),(327,'saved',1),(9,'rendered',7),(10,'memory',7),(335,'page',6),(326,'flexible',1),(13,'class',7),(325,'programatically',1),(17,'desired',7),(332,'reading',1),(324,'method',1),(322,'nicely',1),(323,'representing',1),(321,'author',1),(25,'calls',7),(28,'3aapi',1),(320,'generating',1),(319,'object',1),(318,'creating',1),(144,'methods',2),(331,'parts',1),(317,'final',1),(316,'output',1),(376,'easy',1),(375,'structures',1),(112,'depend',2),(374,'apis',1),(373,'release',1),(372,'processing',1),(371,'production',1),(370,'twig',1),(88,'module',13),(377,'provide',1),(369,'handy',1),(368,'place',1),(367,'preview',1),(366,'stream',1),(365,'subject',1),(364,'change',1),(363,'code',1),(362,'wrapper',1),(315,'meant',1),(314,'elements',1),(313,'documents',1),(312,'advantage',1),(197,'tags',1),(196,'documented',1),(195,'alpha',1),(167,'supplied',3),(194,'writer',1),(193,'autowriter',1),(192,'start',1),(191,'patch',1),(190,'functions',1),(189,'important',1),(175,'validwriter',3),(188,'details',1),(187,'drastically',1),(186,'emit',1),(185,'changing',1),(184,'subclasses',1),(198,'generation',1),(199,'allowing',1),(200,'automatic',1),(201,'things',1),(289,'information',1),(203,'interface',5),(288,'access',1),(287,'findnodes',1),(206,'libxml2',4),(286,'documentation',1),(221,'parser',4),(220,'gnome',2),(285,'check',1),(284,'libxml',1),(215,'xpath',4),(283,'section',1),(282,'split',1),(281,'providing',1),(229,'xslt',10),(256,'specification',1),(255,'achieved',1),(254,'commands',1),(235,'simple',3),(253,'works',1),(252,'installed',1),(251,'status',1),(250,'goal',1),(249,'full',1),(248,'spec',1),(247,'makes',1),(246,'implementation',1),(257,'current',1),(258,'properly',1),(259,'command',1),(260,'implements',1),(279,'tests',1),(278,'engine',1),(277,'compliant',1),(276,'sablotron',1),(265,'libxslt',3),(275,'showing',1),(274,'extremely',1),(273,'good',1),(270,'fast',3),(272,'project',1),(280,'highly',1),(290,'packages',1),(378,'accessors',1),(361,'patient',1),(360,'literal',1),(359,'mode',1),(383,'site',1),(382,'data',1),(381,'divides',1),(380,'paranoic',1),(379,'layout',1);
/*!40000 ALTER TABLE `word` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `word2message` WRITE;
/*!40000 ALTER TABLE `word2message` DISABLE KEYS */;
INSERT INTO `word2message` VALUES (10,1),(321,1),(317,1),(312,1),(319,1),(4,1),(316,1),(313,1),(9,1),(323,1),(326,1),(332,1),(25,1),(325,1),(13,1),(329,1),(144,1),(318,1),(320,1),(1,1),(324,1),(315,1),(327,1),(331,1),(17,1),(322,1),(314,1),(328,1),(330,1),(372,2),(362,2),(367,2),(112,2),(377,2),(361,2),(368,2),(374,2),(369,2),(359,2),(364,2),(378,2),(366,2),(376,2),(88,2),(375,2),(363,2),(360,2),(370,2),(373,2),(365,2),(371,2),(195,3),(187,3),(175,3),(196,3),(201,3),(191,3),(112,3),(184,3),(199,3),(192,3),(194,3),(185,3),(190,3),(197,3),(186,3),(144,3),(88,3),(200,3),(167,3),(193,3),(188,3),(198,3),(189,3),(285,4),(284,4),(215,4),(220,4),(283,4),(286,4),(221,4),(203,4),(290,4),(88,4),(1,4),(281,4),(288,4),(287,4),(282,4),(206,4),(289,4),(247,5),(260,5),(256,5),(229,5),(254,5),(258,5),(249,5),(253,5),(250,5),(248,5),(259,5),(252,5),(251,5),(221,5),(246,5),(235,5),(257,5),(255,5),(88,5),(270,6),(275,6),(229,6),(278,6),(265,6),(88,6),(277,6),(220,6),(279,6),(273,6),(280,6),(276,6),(203,6),(272,6),(274,6),(380,7),(381,7),(335,7),(383,7),(379,7),(382,7),(88,7);
/*!40000 ALTER TABLE `word2message` ENABLE KEYS */;
UNLOCK TABLES;
